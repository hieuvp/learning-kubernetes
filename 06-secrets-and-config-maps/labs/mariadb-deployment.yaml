---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: mariadb-deployment
  labels:
    app: mariadb

spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb

  template:
    metadata:
      labels:
        app: mariadb

    spec:
      containers:
        - name: mariadb
          image: docker.io/mariadb:10.4

          # Add the "Secrets" (or "ConfigMaps") as environment variables
          # Define a list, one by one
          env:
            # Name of the environment variable that is added to the container
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                # Or using "configMapRef" for a "ConfigMap"
                secretKeyRef:
                  name: mariadb-root-password
                  key: password

          # Set environment variables from all key-value pairs
          # in a Secret or ConfigMap
          envFrom:
            # Automatically use the key name as the environment variable name
            # and the key value as the environment variable value
            - secretRef:
                # In this case,
                # set the MYSQL_USER and MYSQL_PASSWORD
                # from the mariadb-user-creds Secret
                # we created earlier
                name: mariadb-user-creds

          ports:
            - containerPort: 3306
              protocol: TCP

          # The volumeMount is pretty self-explanatory
          # create a volume mount for the mariadb-config-volume
          # (specified in the volumes list below it)
          # to the path /etc/mysql/conf.d
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mariadb-volume-1
            - mountPath: /etc/mysql/conf.d
              name: mariadb-config-volume

      # Both Secrets and ConfigMaps can be the source of Kubernetes "volumes"
      # and mounted into the containers instead of
      # using a filesystem or block device as the volume to be mounted
      volumes:
        # An emptyDir (effectively a temporary or ephemeral)
        # volume mounted to /var/lib/mysql to store the MariaDB data
        - emptyDir: {}
          name: mariadb-volume-1
        # When the Pod restarts, the data in the emptyDir volume is lost

        # add your ConfigMap as a source by adding it
        # to the volume list and then adding a volumeMount
        # for it to the container definition
        - configMap:
            name: mariadb-config
            items:
              - key: max_allowed_packet.cnf
                path: max_allowed_packet.cnf
          name: mariadb-config-volume
